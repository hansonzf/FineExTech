// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orderpool.Api.Infrastructure;

#nullable disable

namespace Orderpool.Api.Migrations
{
    [DbContext(typeof(OrderpoolDbContext))]
    partial class OrderpoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Orderpool.Api.Models.OrderWatcherAggregate.OrderProcess", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("OrderWatcherId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("ProcessTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Result")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("WatcherId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("OrderWatcherId");

                    b.HasIndex("WatcherId");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex("WatcherId"));

                    b.ToTable("OrderProcess");
                });

            modelBuilder.Entity("Orderpool.Api.Models.OrderWatcherAggregate.OrderWatcher", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Handler")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OrderUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginOrderPK")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ProcessingStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderUuid")
                        .IsUnique();

                    b.ToTable("OrderWatchers");
                });

            modelBuilder.Entity("Orderpool.Api.Models.RemoteOrderAggregate.RemoteOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ContentOfOrder")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderUuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OriginOrderPK")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderUuid")
                        .IsUnique();

                    b.ToTable("RemoteOrder");
                });

            modelBuilder.Entity("Orderpool.Api.Models.OrderWatcherAggregate.OrderProcess", b =>
                {
                    b.HasOne("Orderpool.Api.Models.OrderWatcherAggregate.OrderWatcher", null)
                        .WithMany("Processses")
                        .HasForeignKey("OrderWatcherId");

                    b.HasOne("Orderpool.Api.Models.OrderWatcherAggregate.OrderWatcher", null)
                        .WithMany()
                        .HasForeignKey("WatcherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orderpool.Api.Models.OrderWatcherAggregate.OrderWatcher", b =>
                {
                    b.Navigation("Processses");
                });
#pragma warning restore 612, 618
        }
    }
}
